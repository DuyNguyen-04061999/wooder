// MIXINS
// large desktop
@mixin lg {
	@media screen and (max-width: $lg-max) {
		@content;
	}
}
// desktop
@mixin md {
	@media screen and (max-width: $md-max) {
		@content;
	}
}
// tablet
@mixin sm {
	@media screen and (max-width: $sm-max) {
		@content;
	}
}
// mobile
@mixin xs {
	@media screen and (max-width: $xs-max) {
		@content;
	}
}
// small mobile
@mixin xxs {
	@media (max-width: $xxs-max) {
		@content;
	}
}

// desktop landscape
@mixin mdX {
	@media screen and (max-width: $md-max) and (orientation: landscape) {
		@content;
	}
}
// tablet landscape
@mixin smX {
	@media screen and (max-width: $sm-max) and (orientation: landscape) {
		@content;
	}
}
// mobile landscape
@mixin xsX {
	@media screen and (max-width: $xs-max) and (orientation: landscape) {
		@content;
	}
}

@mixin maxW($args) {
	@media (max-width: $args) {
		@content;
	}
}
@mixin minW($args) {
	@media (min-width: $args) {
		@content;
	}
}
@mixin minH($args) {
	@media (min-height: $args) {
		@content;
	}
}
@mixin maxH($args) {
	@media (max-height: $args) {
		@content;
	}
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes #{$animation-name} {
		@content;
	}
	@-moz-keyframes #{$animation-name} {
		@content;
	}
	@-ms-keyframes #{$animation-name} {
		@content;
	}
	@-o-keyframes #{$animation-name} {
		@content;
	}
	@keyframes #{$animation-name} {
		@content;
	}
}

@mixin animation($str) {
	animation: #{$str};
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
}
@mixin transform($args) {
	transform: $args;
	-webkit-transform: $args;
	-moz-transform: $args;
	-ms-transform: $args;
	-o-transform: $args;
}

@mixin transform-origin($args) {
	transform-origin: $args;
	-webkit-transform-origin: $args;
	-moz-transform-origin: $args;
	-ms-transform-origin: $args;
	-o-transform-origin: $args;
}

@mixin transition-delay($args) {
	transition-delay: $args;
	-webkit-transition-delay: $args;
	-moz-transition-delay: $args;
	-ms-transition-delay: $args;
	-o-transition-delay: $args;
}

@mixin transition($args) {
	transition: $args;
	-webkit-transition: $args;
	-moz-transition: $args;
	-ms-transition: $args;
	-o-transition: $args;
}
//edit
@mixin text($font-family, $font-size, $line-height, $letter-spacing, $color, $text-transform) {
	font-family: $font-family;
	font-size: $font-size;
	line-height: $line-height;
	letter-spacing: $letter-spacing;
	color: $color;
	text-transform: $text-transform;
}

@mixin mid($flex: false) {
	@if $flex == false {
		position: absolute;
		top: 50%;
		left: 50%;
		@include transform(translate(-50%, -50%));
	} @else {
		display: flex;
		align-items: center;
		justify-content: center;
	}
}

//edit

@mixin absoluteCenter($direction: "XY", $width: auto, $height: $width) {
	position: absolute;
	width: $width;
	height: $height;

	@if $direction == "XY" {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}

	@if $direction == "X" {
		left: 50%;
		transform: translateX(-50%);
	}

	@if $direction == "Y" {
		top: 50%;
		transform: translateY(-50%);
	}
}

@mixin flexVerCenter {
	display: flex;
	align-items: center;
}

@mixin flexBetweenCenter {
	display: flex;
	justify-content: space-between;
	align-items: center;
}
@mixin flexEvenlyCenter {
	display: flex;
	justify-content: space-evenly;
	align-items: center;
}
@mixin flexColVerCenter {
	display: flex;
	flex-direction: column;
	justify-content: center;
}
@mixin flexColVerBetween {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}
@mixin flexColBothCenter {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}
@mixin flexColBothVerBetween {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	align-items: center;
}

@mixin midImg($maxwidth: initial) {
	position: absolute;
	max-width: $maxwidth;
	min-width: 100%;
	min-height: 100%;
	object-fit: cover;
	@include mid;
}

//edit
@mixin imgFit {
	img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}
}

@mixin fullscreen($fixed: false) {
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	@if $fixed {
		position: fixed;
	} @else {
		position: absolute;
	}
}

@mixin visible($param: 1) {
	@if $param == 1 {
		opacity: 1;
		visibility: visible;
		pointer-events: auto;
	} @else {
		opacity: 0;
		visibility: hidden;
		pointer-events: none;
	}
}
@mixin br($radius) {
	border-radius: $radius;
	background-clip: padding-box;
}

@mixin overtext($lines) {
	display: -webkit-inline-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;
	text-overflow: ellipsis;
	overflow: hidden;
}

@mixin size($w, $h: $w) {
	width: $w;
	height: $h;
}

@mixin customscroll($width: 5px, $bgTrack: #000, $bgThumb: #ddd) {
	&::-webkit-scrollbar {
		width: $width;
	}
	&::-webkit-scrollbar-track {
		background: $bgTrack;
	}
	&::-webkit-scrollbar-thumb {
		background: $bgThumb;
	}
}

//

//edit for project
@mixin playBtn($width, $height: $width, $color: #fff) {
	border-width: $width $width $width $height;
	border-style: solid;
	border-color: transparent transparent transparent $color;
	transform: translateX(25%);
}

@mixin textBox(
	$maxWith,
	$pdLeft: 0,
	$pdRight: 0,
	$lineTextbox: true,
	$widthLineTextBox: 75px,
	$right: calc(100% + 20px),
	$left: calc(100% + 20px),
	$btn: true
) {
	.text__box {
		max-width: $maxWith;
		width: 100%;
		padding-left: $pdLeft;
		padding-right: $pdRight;

		@if $lineTextbox {
			&-heading {
				position: relative;
				.line {
					@include absoluteCenter("Y");
					right: $right;
					left: $left;
					height: 2px;
					width: $widthLineTextBox;
					background: $black-line;
				}
			}
		}

		@if $btn {
			.btn {
				margin-top: 10px;
				&__learn {
					position: relative;

					// lineBtn
					&::before {
						content: "";
						position: absolute;
						bottom: 16px;
						left: 0;
						height: 2px;
						width: 36px;
						background: $brown;
					}
				}
			}
		}
	}
}

@mixin contentGrid($col: 3, $fr: 1fr) {
	display: grid;
	grid-template-columns: repeat($col, $fr);
}
